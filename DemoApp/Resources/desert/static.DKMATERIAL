<?xml version="1.0" encoding="UTF-8" ?>
<DKSerializer class="DKMaterial">
  <Local type="xml">
    <DKVariant type="pairs">
      <Node>
        <Key>renderingProperties</Key>
        <DKVariant type="array">
          <DKVariant type="pairs">
            <Node>
              <Key>blendState</Key>
              <DKVariant type="pairs">
                <Node>
                  <Key>colorMaskA</Key>
                  <DKVariant type="integer">1</DKVariant>
                </Node>
                <Node>
                  <Key>colorMaskB</Key>
                  <DKVariant type="integer">1</DKVariant>
                </Node>
                <Node>
                  <Key>colorMaskG</Key>
                  <DKVariant type="integer">1</DKVariant>
                </Node>
                <Node>
                  <Key>colorMaskR</Key>
                  <DKVariant type="integer">1</DKVariant>
                </Node>
                <Node>
                  <Key>constantColor</Key>
                  <DKVariant type="vector4">0.000000, 0.000000, 0.000000, 0.000000</DKVariant>
                </Node>
                <Node>
                  <Key>dstAlpha</Key>
                  <DKVariant type="string">Zero</DKVariant>
                </Node>
                <Node>
                  <Key>dstRGB</Key>
                  <DKVariant type="string">Zero</DKVariant>
                </Node>
                <Node>
                  <Key>funcAlpha</Key>
                  <DKVariant type="string">Add</DKVariant>
                </Node>
                <Node>
                  <Key>funcRGB</Key>
                  <DKVariant type="string">Add</DKVariant>
                </Node>
                <Node>
                  <Key>srcAlpha</Key>
                  <DKVariant type="string">One</DKVariant>
                </Node>
                <Node>
                  <Key>srcRGB</Key>
                  <DKVariant type="string">One</DKVariant>
                </Node>
              </DKVariant>
            </Node>
            <Node>
              <Key>depthFunc</Key>
              <DKVariant type="string">Less</DKVariant>
            </Node>
            <Node>
              <Key>depthWrite</Key>
              <DKVariant type="integer">1</DKVariant>
            </Node>
            <Node>
              <Key>name</Key>
              <DKVariant type="string">Default Scene</DKVariant>
            </Node>
            <Node>
              <Key>shaders</Key>
              <DKVariant type="array">
                <DKVariant type="pairs">
                  <Node>
                    <Key>name</Key>
                    <DKVariant type="string">main</DKVariant>
                  </Node>
                  <Node>
                    <Key>source</Key>
                    <DKVariant type="string">
                      #ifndef GL_ES
                      #define highp
                      #define mediump
                      #define lowp
                      #endif

                      uniform highp mat4 modelMatrix;
                      uniform highp mat4 modelViewMatrix;
                      uniform highp mat4 modelViewProjectionMatrix;

                      attribute highp vec4 position;
                      attribute mediump vec3 normal;
                      attribute mediump vec2 texcoord;

                      varying highp vec3 pos;
                      varying mediump vec3 norm;
                      varying mediump vec2 texuv;

                      void main(void)
                      {
                          highp vec4 p = modelMatrix * position;
                          pos = p.xyz / p.w;
                          norm = normalize(vec3(modelMatrix * vec4(normal, 0.0)));
                          texuv = texcoord;
                          gl_Position = modelViewProjectionMatrix * position;
                      }
                    </DKVariant>
                  </Node>
                  <Node>
                    <Key>type</Key>
                    <DKVariant type="string">VertexShader</DKVariant>
                  </Node>
                </DKVariant>
                <DKVariant type="pairs">
                  <Node>
                    <Key>name</Key>
                    <DKVariant type="string">main</DKVariant>
                  </Node>
                  <Node>
                    <Key>source</Key>
                    <DKVariant type="string">
                      #ifndef GL_ES
                      #define highp
                      #define mediump
                      #define lowp
                      #endif

                      varying highp vec3 pos;
                      varying mediump vec3 norm;
                      varying mediump vec2 texuv;

                      uniform sampler2D diffuseMap;

                      uniform mediump vec3 lightDir;
                      uniform mediump vec3 lightColor;
                      uniform highp vec3 camera;
                      uniform lowp vec3 ambientColor;

                      void main(void)
                      {
                          mediump vec3 halfvector = normalize(normalize(camera) - normalize(lightDir));
                          mediump vec3 normal = gl_FrontFacing ? normalize(norm) : -normalize(norm);
                          lowp vec4 color = texture2D(diffuseMap, texuv);

                          mediump float lambert = max(dot(normal, -lightDir), 0.0);
                          mediump float specularPower = pow(max(dot(normal, halfvector), 0.0), 4.0);

                          lowp vec3 specular = vec3(0.1, 0.1, 0.1) * specularPower;
                          lowp vec3 diffuse = color.rgb * lightColor.rgb * lambert;
                          lowp vec3 ambient = color.rgb * ambientColor;

                          gl_FragColor.rgb = diffuse + ambient + specular;
                          gl_FragColor.a = 1.0;
                      }
                    </DKVariant>
                  </Node>
                  <Node>
                    <Key>type</Key>
                    <DKVariant type="string">FragmentShader</DKVariant>
                  </Node>
                </DKVariant>
              </DKVariant>
            </Node>
          </DKVariant>
          <DKVariant type="pairs">
            <Node>
              <Key>blendState</Key>
              <DKVariant type="pairs">
                <Node>
                  <Key>colorMaskA</Key>
                  <DKVariant type="integer">0</DKVariant>
                </Node>
                <Node>
                  <Key>colorMaskB</Key>
                  <DKVariant type="integer">0</DKVariant>
                </Node>
                <Node>
                  <Key>colorMaskG</Key>
                  <DKVariant type="integer">0</DKVariant>
                </Node>
                <Node>
                  <Key>colorMaskR</Key>
                  <DKVariant type="integer">0</DKVariant>
                </Node>
                <Node>
                  <Key>constantColor</Key>
                  <DKVariant type="vector4">0.000000, 0.000000, 0.000000, 0.000000</DKVariant>
                </Node>
                <Node>
                  <Key>dstAlpha</Key>
                  <DKVariant type="string">Zero</DKVariant>
                </Node>
                <Node>
                  <Key>dstRGB</Key>
                  <DKVariant type="string">Zero</DKVariant>
                </Node>
                <Node>
                  <Key>funcAlpha</Key>
                  <DKVariant type="string">Add</DKVariant>
                </Node>
                <Node>
                  <Key>funcRGB</Key>
                  <DKVariant type="string">Add</DKVariant>
                </Node>
                <Node>
                  <Key>srcAlpha</Key>
                  <DKVariant type="string">One</DKVariant>
                </Node>
                <Node>
                  <Key>srcRGB</Key>
                  <DKVariant type="string">One</DKVariant>
                </Node>
              </DKVariant>
            </Node>
            <Node>
              <Key>depthFunc</Key>
              <DKVariant type="string">Less</DKVariant>
            </Node>
            <Node>
              <Key>depthWrite</Key>
              <DKVariant type="integer">1</DKVariant>
            </Node>
            <Node>
              <Key>name</Key>
              <DKVariant type="string">Generate Shadow</DKVariant>
            </Node>
            <Node>
              <Key>shaders</Key>
              <DKVariant type="array">
                <DKVariant type="pairs">
                  <Node>
                    <Key>name</Key>
                    <DKVariant type="string">main</DKVariant>
                  </Node>
                  <Node>
                    <Key>source</Key>
                    <DKVariant type="string">
                      #ifndef GL_ES
                      #define highp
                      #define mediump
                      #define lowp
                      #endif

                      uniform highp mat4 modelViewProjectionMatrix;
                      attribute highp vec4 position;

                      void main(void)
                      {
                          gl_Position = modelViewProjectionMatrix * position;
                      }
                    </DKVariant>
                  </Node>
                  <Node>
                    <Key>type</Key>
                    <DKVariant type="string">VertexShader</DKVariant>
                  </Node>
                </DKVariant>
                <DKVariant type="pairs">
                  <Node>
                    <Key>name</Key>
                    <DKVariant type="string">main</DKVariant>
                  </Node>
                  <Node>
                    <Key>source</Key>
                    <DKVariant type="string">
                      #ifndef GL_ES
                      #define highp
                      #define mediump
                      #define lowp
                      #endif

                      void main(void)
                      {
                          gl_FragColor = vec4(0.0);
                      }
                    </DKVariant>
                  </Node>
                  <Node>
                    <Key>type</Key>
                    <DKVariant type="string">FragmentShader</DKVariant>
                  </Node>
                </DKVariant>
              </DKVariant>
            </Node>
          </DKVariant>

          <DKVariant type="pairs">
            <Node>
              <Key>blendState</Key>
              <DKVariant type="pairs">
                <Node>
                  <Key>colorMaskA</Key>
                  <DKVariant type="integer">1</DKVariant>
                </Node>
                <Node>
                  <Key>colorMaskB</Key>
                  <DKVariant type="integer">1</DKVariant>
                </Node>
                <Node>
                  <Key>colorMaskG</Key>
                  <DKVariant type="integer">1</DKVariant>
                </Node>
                <Node>
                  <Key>colorMaskR</Key>
                  <DKVariant type="integer">1</DKVariant>
                </Node>
                <Node>
                  <Key>constantColor</Key>
                  <DKVariant type="vector4">0.000000, 0.000000, 0.000000, 0.000000</DKVariant>
                </Node>
                <Node>
                  <Key>dstAlpha</Key>
                  <DKVariant type="string">Zero</DKVariant>
                </Node>
                <Node>
                  <Key>dstRGB</Key>
                  <DKVariant type="string">Zero</DKVariant>
                </Node>
                <Node>
                  <Key>funcAlpha</Key>
                  <DKVariant type="string">Add</DKVariant>
                </Node>
                <Node>
                  <Key>funcRGB</Key>
                  <DKVariant type="string">Add</DKVariant>
                </Node>
                <Node>
                  <Key>srcAlpha</Key>
                  <DKVariant type="string">One</DKVariant>
                </Node>
                <Node>
                  <Key>srcRGB</Key>
                  <DKVariant type="string">One</DKVariant>
                </Node>
              </DKVariant>
            </Node>
            <Node>
              <Key>depthFunc</Key>
              <DKVariant type="string">Less</DKVariant>
            </Node>
            <Node>
              <Key>depthWrite</Key>
              <DKVariant type="integer">1</DKVariant>
            </Node>
            <Node>
              <Key>name</Key>
              <DKVariant type="string">Scene with Shadow</DKVariant>
            </Node>
            <Node>
              <Key>shaders</Key>
              <DKVariant type="array">
                <DKVariant type="pairs">
                  <Node>
                    <Key>name</Key>
                    <DKVariant type="string">main</DKVariant>
                  </Node>
                  <Node>
                    <Key>source</Key>
                    <DKVariant type="string">
                      #ifndef GL_ES
                      #define highp
                      #define mediump
                      #define lowp
                      #endif

                      uniform highp mat4 modelMatrix;
                      uniform highp mat4 modelViewProjectionMatrix;
                      uniform highp mat4 shadowMapMatrix;
                      uniform mediump vec3 lightDir;

                      attribute highp vec4 position;
                      attribute mediump vec3 normal;
                      attribute mediump vec2 texcoord;

                      varying highp vec3 pos;
                      varying mediump vec3 norm;
                      varying mediump vec2 texuv;
                      varying highp vec4 shadow;

                      void main(void)
                      {
                          highp vec4 p = modelMatrix * position;
                          pos = p.xyz / p.w;
                          shadow = shadowMapMatrix * p;
                          norm = normalize(vec3(modelMatrix * vec4(normal, 0.0)));
                          texuv = texcoord;
                          gl_Position = modelViewProjectionMatrix * position;
                      }
                    </DKVariant>
                  </Node>
                  <Node>
                    <Key>type</Key>
                    <DKVariant type="string">VertexShader</DKVariant>
                  </Node>
                </DKVariant>
                <DKVariant type="pairs">
                  <Node>
                    <Key>name</Key>
                    <DKVariant type="string">main</DKVariant>
                  </Node>
                  <Node>
                    <Key>source</Key>
                    <DKVariant type="string">
                      #ifndef GL_ES
                      #define highp
                      #define mediump
                      #define lowp
                      #endif

                      varying highp vec3 pos;
                      varying mediump vec3 norm;
                      varying mediump vec2 texuv;

                      uniform sampler2D diffuseMap;

                      uniform mediump vec3 lightDir;
                      uniform mediump vec3 lightColor;
                      uniform mediump vec3 camera;
                      uniform lowp vec3 ambientColor;

                      uniform sampler2D shadowMap;
                      varying highp vec4 shadow;

                      uniform mediump float fogDensity;
                      uniform lowp vec3 fogColor;

                      #define LOG2 1.442695
                      #define SM_BIAS 0.005

                      void main(void)
                      {
                          highp float shadowFactor = 1.0;
                          if (texture2DProj(shadowMap, shadow).z &lt; shadow.z / shadow.w - SM_BIAS)
                              shadowFactor = 0.0;

                          lowp vec4 color = texture2D(diffuseMap, texuv);

                          mediump vec3 normal = gl_FrontFacing ? normalize(norm) : -normalize(norm);
                          mediump float lambert = max(dot(normal, -lightDir), 0.0);

                          mediump vec3 halfvector = normalize(normalize(camera) - normalize(lightDir));
                          mediump float specularPower = pow(max(dot(normal, halfvector), 0.0), 4.0);

                          lowp vec3 specular = vec3(0.1, 0.1, 0.1) * specularPower * shadowFactor;
                          lowp vec3 diffuse = color.rgb * lightColor.rgb * lambert * mix(0.2, 1.0, shadowFactor);
                          lowp vec3 ambient = color.rgb * ambientColor;

                          lowp vec3 finalColor = diffuse + ambient + specular;

                          highp float z = distance(camera, pos);
                          highp float fogFactor = exp2(-fogDensity * fogDensity * z * z * LOG2);
                          fogFactor = clamp(fogFactor, 0.0, 1.0);

                          gl_FragColor.rgb = mix(fogColor, finalColor, fogFactor);
                          gl_FragColor.a = 1.0;
                      }
                    </DKVariant>
                  </Node>
                  <Node>
                    <Key>type</Key>
                    <DKVariant type="string">FragmentShader</DKVariant>
                  </Node>
                </DKVariant>
              </DKVariant>
            </Node>
          </DKVariant>
          <DKVariant type="pairs">
            <Node>
              <Key>blendState</Key>
              <DKVariant type="pairs">
                <Node>
                  <Key>colorMaskA</Key>
                  <DKVariant type="integer">1</DKVariant>
                </Node>
                <Node>
                  <Key>colorMaskB</Key>
                  <DKVariant type="integer">1</DKVariant>
                </Node>
                <Node>
                  <Key>colorMaskG</Key>
                  <DKVariant type="integer">1</DKVariant>
                </Node>
                <Node>
                  <Key>colorMaskR</Key>
                  <DKVariant type="integer">1</DKVariant>
                </Node>
                <Node>
                  <Key>constantColor</Key>
                  <DKVariant type="vector4">0.000000, 0.000000, 0.000000, 0.000000</DKVariant>
                </Node>
                <Node>
                  <Key>dstAlpha</Key>
                  <DKVariant type="string">Zero</DKVariant>
                </Node>
                <Node>
                  <Key>dstRGB</Key>
                  <DKVariant type="string">Zero</DKVariant>
                </Node>
                <Node>
                  <Key>funcAlpha</Key>
                  <DKVariant type="string">Add</DKVariant>
                </Node>
                <Node>
                  <Key>funcRGB</Key>
                  <DKVariant type="string">Add</DKVariant>
                </Node>
                <Node>
                  <Key>srcAlpha</Key>
                  <DKVariant type="string">One</DKVariant>
                </Node>
                <Node>
                  <Key>srcRGB</Key>
                  <DKVariant type="string">One</DKVariant>
                </Node>
              </DKVariant>
            </Node>
            <Node>
              <Key>depthFunc</Key>
              <DKVariant type="string">Less</DKVariant>
            </Node>
            <Node>
              <Key>depthWrite</Key>
              <DKVariant type="integer">1</DKVariant>
            </Node>
            <Node>
              <Key>name</Key>
              <DKVariant type="string">Scene with Shadow 9Samples</DKVariant>
            </Node>
            <Node>
              <Key>shaders</Key>
              <DKVariant type="array">
                <DKVariant type="pairs">
                  <Node>
                    <Key>name</Key>
                    <DKVariant type="string">main</DKVariant>
                  </Node>
                  <Node>
                    <Key>source</Key>
                    <DKVariant type="string">
                      #ifndef GL_ES
                      #define highp
                      #define mediump
                      #define lowp
                      #endif

                      uniform highp mat4 modelMatrix;
                      uniform highp mat4 modelViewProjectionMatrix;
                      uniform highp mat4 shadowMapMatrix;
                      uniform mediump vec3 lightDir;

                      attribute highp vec4 position;
                      attribute mediump vec3 normal;
                      attribute mediump vec2 texcoord;

                      varying highp vec3 pos;
                      varying mediump vec3 norm;
                      varying mediump vec2 texuv;
                      varying highp vec4 shadow;

                      void main(void)
                      {
                          highp vec4 p = modelMatrix * position;
                          pos = p.xyz / p.w;
                          shadow = shadowMapMatrix * p;
                          norm = normalize(vec3(modelMatrix * vec4(normal, 0.0)));
                          texuv = texcoord;
                          gl_Position = modelViewProjectionMatrix * position;
                      }
                    </DKVariant>
                  </Node>
                  <Node>
                    <Key>type</Key>
                    <DKVariant type="string">VertexShader</DKVariant>
                  </Node>
                </DKVariant>
                <DKVariant type="pairs">
                  <Node>
                    <Key>name</Key>
                    <DKVariant type="string">main</DKVariant>
                  </Node>
                  <Node>
                    <Key>source</Key>
                    <DKVariant type="string">
                      #ifndef GL_ES
                      #define highp
                      #define mediump
                      #define lowp
                      #endif

                      varying highp vec3 pos;
                      varying mediump vec3 norm;
                      varying mediump vec2 texuv;

                      uniform sampler2D diffuseMap;

                      uniform mediump vec3 lightDir;
                      uniform mediump vec3 lightColor;
                      uniform mediump vec3 camera;
                      uniform lowp vec3 ambientColor;

                      uniform sampler2D shadowMap;
                      uniform mediump vec2 pcfOffset[9];
                      varying highp vec4 shadow;

                      uniform mediump float fogDensity;
                      uniform lowp vec3 fogColor;

                      #define LOG2 1.442695
                      #define SM_BIAS 0.005

                      void main(void)
                      {
                          highp float shadowFactor = 1.0;
                          mediump vec2 shadowUV = shadow.xy / shadow.w;
                          highp float shadowDepth = shadow.z / shadow.w - SM_BIAS;
                          for (int i = 0; i &lt; 9; i++)
                          {
                              if (texture2D(shadowMap, shadowUV + pcfOffset[i]).z &lt; shadowDepth)
                                  shadowFactor -= 0.111111;
                          }

                          lowp vec4 color = texture2D(diffuseMap, texuv);

                          mediump vec3 normal = gl_FrontFacing ? normalize(norm) : -normalize(norm);
                          mediump float lambert = max(dot(normal, -lightDir), 0.0);

                          mediump vec3 halfvector = normalize(normalize(camera) - normalize(lightDir));
                          mediump float specularPower = pow(max(dot(normal, halfvector), 0.0), 4.0);

                          lowp vec3 specular = vec3(0.1, 0.1, 0.1) * specularPower * shadowFactor;
                          lowp vec3 diffuse = color.rgb * lightColor.rgb * lambert * mix(0.2, 1.0, shadowFactor);
                          lowp vec3 ambient = color.rgb * ambientColor;

                          lowp vec3 finalColor = diffuse + ambient + specular;

                          highp float z = distance(camera, pos);
                          highp float fogFactor = exp2(-fogDensity * fogDensity * z * z * LOG2);
                          fogFactor = clamp(fogFactor, 0.0, 1.0);

                          gl_FragColor.rgb = mix(fogColor, finalColor, fogFactor);
                          gl_FragColor.a = 1.0;
                      }
                    </DKVariant>
                  </Node>
                  <Node>
                    <Key>type</Key>
                    <DKVariant type="string">FragmentShader</DKVariant>
                  </Node>
                </DKVariant>
              </DKVariant>
            </Node>
          </DKVariant>
        </DKVariant>
      </Node>
      <Node>
        <Key>samplerProperties</Key>
        <DKVariant type="pairs" />
      </Node>
      <Node>
        <Key>shaderProperties</Key>
        <DKVariant type="array" />
      </Node>
      <Node>
        <Key>shadingProperties</Key>
        <DKVariant type="pairs">
          <Node>
            <Key>camera</Key>
            <DKVariant type="pairs">
              <Node>
                <Key>id</Key>
                <DKVariant type="string">CameraPosition</DKVariant>
              </Node>
              <Node>
                <Key>type</Key>
                <DKVariant type="string">Unknown</DKVariant>
              </Node>
            </DKVariant>
          </Node>
          <Node>
            <Key>diffuseMap</Key>
            <DKVariant type="pairs">
              <Node>
                <Key>id</Key>
                <DKVariant type="string">Texture2D</DKVariant>
              </Node>
              <Node>
                <Key>type</Key>
                <DKVariant type="string">Unknown</DKVariant>
              </Node>
            </DKVariant>
          </Node>
          <Node>
            <Key>lightColor</Key>
            <DKVariant type="pairs">
              <Node>
                <Key>id</Key>
                <DKVariant type="string">DirectionalLightColor</DKVariant>
              </Node>
              <Node>
                <Key>type</Key>
                <DKVariant type="string">Unknown</DKVariant>
              </Node>
            </DKVariant>
          </Node>
          <Node>
            <Key>lightDir</Key>
            <DKVariant type="pairs">
              <Node>
                <Key>id</Key>
                <DKVariant type="string">DirectionalLightDirection</DKVariant>
              </Node>
              <Node>
                <Key>type</Key>
                <DKVariant type="string">Unknown</DKVariant>
              </Node>
            </DKVariant>
          </Node>
          <Node>
            <Key>ambientColor</Key>
            <DKVariant type="pairs">
              <Node>
                <Key>id</Key>
                <DKVariant type="string">AmbientColor</DKVariant>
              </Node>
              <Node>
                <Key>type</Key>
                <DKVariant type="string">Unknown</DKVariant>
              </Node>
            </DKVariant>
          </Node>
          <Node>
            <Key>modelMatrix</Key>
            <DKVariant type="pairs">
              <Node>
                <Key>id</Key>
                <DKVariant type="string">ModelMatrix</DKVariant>
              </Node>
              <Node>
                <Key>type</Key>
                <DKVariant type="string">Unknown</DKVariant>
              </Node>
            </DKVariant>
          </Node>
          <Node>
            <Key>modelViewMatrix</Key>
            <DKVariant type="pairs">
              <Node>
                <Key>id</Key>
                <DKVariant type="string">ModelViewMatrix</DKVariant>
              </Node>
              <Node>
                <Key>type</Key>
                <DKVariant type="string">Unknown</DKVariant>
              </Node>
            </DKVariant>
          </Node>
          <Node>
            <Key>modelViewProjectionMatrix</Key>
            <DKVariant type="pairs">
              <Node>
                <Key>id</Key>
                <DKVariant type="string">ModelViewProjectionMatrix</DKVariant>
              </Node>
              <Node>
                <Key>type</Key>
                <DKVariant type="string">Unknown</DKVariant>
              </Node>
            </DKVariant>
          </Node>
          <Node>
            <Key>fogDensity</Key>
            <DKVariant type="pairs">
              <Node>
                <Key>id</Key>
                <DKVariant type="string">UserDefine</DKVariant>
              </Node>
              <Node>
                <Key>type</Key>
                <DKVariant type="string">Float1</DKVariant>
              </Node>
              <Node>
                <Key>value</Key>
                <DKVariant type="array">
                  <DKVariant type="float">
                    0.0
                  </DKVariant>
                </DKVariant>
              </Node>
            </DKVariant>
          </Node>
          <Node>
            <Key>fogColor</Key>
            <DKVariant type="pairs">
              <Node>
                <Key>id</Key>
                <DKVariant type="string">UserDefine</DKVariant>
              </Node>
              <Node>
                <Key>type</Key>
                <DKVariant type="string">Float3</DKVariant>
              </Node>
              <Node>
                <Key>value</Key>
                <DKVariant type="array">
                  <DKVariant type="float">1.0</DKVariant>
                  <DKVariant type="float">1.0</DKVariant>
                  <DKVariant type="float">1.0</DKVariant>
                </DKVariant>
              </Node>
            </DKVariant>
          </Node>
        </DKVariant>
      </Node>
      <Node>
        <Key>streamProperties</Key>
        <DKVariant type="pairs">
          <Node>
            <Key>normal</Key>
            <DKVariant type="pairs">
              <Node>
                <Key>components</Key>
                <DKVariant type="integer">0</DKVariant>
              </Node>
              <Node>
                <Key>id</Key>
                <DKVariant type="string">Normal</DKVariant>
              </Node>
              <Node>
                <Key>type</Key>
                <DKVariant type="string">Unknown</DKVariant>
              </Node>
            </DKVariant>
          </Node>
          <Node>
            <Key>position</Key>
            <DKVariant type="pairs">
              <Node>
                <Key>components</Key>
                <DKVariant type="integer">0</DKVariant>
              </Node>
              <Node>
                <Key>id</Key>
                <DKVariant type="string">Position</DKVariant>
              </Node>
              <Node>
                <Key>type</Key>
                <DKVariant type="string">Unknown</DKVariant>
              </Node>
            </DKVariant>
          </Node>
          <Node>
            <Key>texcoord</Key>
            <DKVariant type="pairs">
              <Node>
                <Key>components</Key>
                <DKVariant type="integer">0</DKVariant>
              </Node>
              <Node>
                <Key>id</Key>
                <DKVariant type="string">TexCoord</DKVariant>
              </Node>
              <Node>
                <Key>type</Key>
                <DKVariant type="string">Unknown</DKVariant>
              </Node>
            </DKVariant>
          </Node>
        </DKVariant>
      </Node>
    </DKVariant>
  </Local>
  <Include key="super">
    <DKSerializer class="DKResource">
      <Local type="xml">
        <DKVariant type="pairs">
          <Node>
            <Key>name</Key>
            <DKVariant type="string">static.DKMaterial</DKVariant>
          </Node>
          <Node>
            <Key>tag</Key>
            <DKVariant type="integer">0</DKVariant>
          </Node>
        </DKVariant>
      </Local>
    </DKSerializer>
  </Include>
  <ExternalMap key="textures" />
</DKSerializer>
